{"ast":null,"code":"var _jsxFileName = \"/home/mayara/mayara/github-explorer/src/pages/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState(\"\"); //crie esse estado para armazenar o valor do input\n\n  const [inputError, setInputError] = useState(\"\");\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    localStorage.setItem(\"@GithubExplorer:repositories\", JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepositorry(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError(\"Digite o autor/nome do repositório\");\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo(\"\");\n      setInputError(\"\");\n    } catch (err) {\n      setInputError(\"Erro na busca por este repositório\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"Explore reposit\\xF3rios no Github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newRepo,\n        onChange: e => setNewRepo(e.target.value),\n        placeholder: \"Digite o nome do reposit\\xF3rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), repositories.map(repository => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"teste\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: repository.owner.avatar_url,\n        alt: repository.owner.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: repository.full_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repository.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, repository.full_name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"VOsiSRHHzJ1h+jvzyru0FRJBZyI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/mayara/mayara/github-explorer/src/pages/Dashboard.tsx"],"names":["React","useState","useEffect","api","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","localStorage","setItem","JSON","stringify","handleAddRepositorry","event","preventDefault","response","get","repository","data","err","e","target","value","map","owner","avatar_url","login","full_name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAsD,OAAtD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CADgC,CACY;;AAC5C,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAe,EAAf,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACC,OAAb,CACE,8BADF,EAEEC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAFF;AAID,GALQ,EAKN,CAACA,YAAD,CALM,CAAT;;AAOA,iBAAeM,oBAAf,CACEC,KADF,EAEiB;AACfA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACZ,OAAL,EAAc;AACZG,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACA;AACD;;AAED,QAAI;AACF,YAAMU,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAJ,CAAS,SAAQd,OAAQ,EAAzB,CAAvB;AAEA,YAAMe,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAX,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBW,UAAlB,CAAD,CAAf;AACAd,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KARD,CAQE,OAAOc,GAAP,EAAY;AACZd,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACD;AACF;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,8BACE;AACE,QAAA,KAAK,EAAEH,OADT;AAEE,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAYGhB,YAAY,CAACiB,GAAb,CAAkBN,UAAD,iBAChB;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,UAAU,CAACO,KAAX,CAAiBC,UAA3B;AAAuC,QAAA,GAAG,EAAER,UAAU,CAACO,KAAX,CAAiBE;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA,oBAAST,UAAU,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIV,UAAU,CAACW;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAQX,UAAU,CAACU,SAAnB;AAAA;AAAA;AAAA;AAAA,YADD,CAZH;AAAA,kBADF;AAwBD,CA1DD;;GAAM1B,S;;KAAAA,S;AA4DN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, FormEvent } from \"react\";\nimport api from \"../services/api\";\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState(\"\"); //crie esse estado para armazenar o valor do input\n  const [inputError, setInputError] = useState(\"\");\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"@GithubExplorer:repositories\",\n      JSON.stringify(repositories)\n    );\n  }, [repositories]);\n\n  async function handleAddRepositorry(\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError(\"Digite o autor/nome do repositório\");\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo(\"\");\n      setInputError(\"\");\n    } catch (err) {\n      setInputError(\"Erro na busca por este repositório\");\n    }\n  }\n\n  return (\n    <>\n      <a>Explore repositórios no Github</a>\n\n      <button type='submit'>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder='Digite o nome do repositório'\n        />\n        <button type='submit'>Pesquisar</button>\n      </button>\n\n      {repositories.map((repository) => (\n        <a key={repository.full_name} href='teste'>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <div>\n            <strong>{repository.full_name}</strong>\n            <p>{repository.description}</p>\n          </div>\n        </a>\n      ))}\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}