{"ast":null,"code":"var _jsxFileName = \"/home/mayara/mayara/github-explorer/src/pages/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { FiChevronRight } from \"react-icons/fi\";\nimport api from \"../../services/api\";\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error } from \"./styles\";\nimport Repository from \"../Repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState(\"\"); //crie esse estado para armazenar o valor do input\n\n  const [inputError, setInputError] = useState(\"\");\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    localStorage.setItem(\"@GithubExplorer:repositories\", JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepositorry(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError(\"Digite o autor/nome do repositório\");\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo(\"\");\n      setInputError(\"\");\n    } catch (err) {\n      setInputError(\"Erro na busca por este repositório\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImg,\n      alt: \"Github Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Explore reposit\\xF3rios no Github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      hasError: !!inputError,\n      onSubmit: handleAddRepositorry,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newRepo,\n        onChange: e => setNewRepo(e.target.value),\n        placeholder: \"Digite o nome do reposit\\xF3rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), inputError && /*#__PURE__*/_jsxDEV(Error, {\n      children: [\" \", inputError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_url,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, repository.full_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"VOsiSRHHzJ1h+jvzyru0FRJBZyI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/mayara/mayara/github-explorer/src/pages/Dashboard.tsx"],"names":["React","useState","useEffect","FiChevronRight","api","logoImg","Title","Form","Repositories","Error","Repository","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","localStorage","setItem","JSON","stringify","handleAddRepositorry","event","preventDefault","response","get","repository","data","err","e","target","value","map","owner","avatar_url","login","full_name","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from \"react\";\nimport { FiChevronRight } from \"react-icons/fi\";\nimport api from \"../../services/api\";\n\nimport logoImg from \"../../assets/logo.svg\";\n\nimport { Title, Form, Repositories, Error } from \"./styles\";\nimport Repository from \"../Repository\";\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState(\"\"); //crie esse estado para armazenar o valor do input\n  const [inputError, setInputError] = useState(\"\");\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"@GithubExplorer:repositories\",\n      JSON.stringify(repositories)\n    );\n  }, [repositories]);\n\n  async function handleAddRepositorry(\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError(\"Digite o autor/nome do repositório\");\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo(\"\");\n      setInputError(\"\");\n    } catch (err) {\n      setInputError(\"Erro na busca por este repositório\");\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt='Github Explorer' />\n      <Title>Explore repositórios no Github</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepositorry}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder='Digite o nome do repositório'\n        />\n        <button type='submit'>Pesquisar</button>\n      </Form>\n\n      {inputError && <Error> {inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.full_name} href='teste'>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}